version: ""

formatter: markdown table

name: terraform-aws-anomaly-detection-alerts

content: |-
  # terraform-aws-anomaly-detection-alerts

  GitHub: [StratusGrid/terraform-aws-anomaly-detection-alerts](https://github.com/StratusGrid/terraform-aws-anomaly-detection-alerts)

  This terraform module uses AWS Cloudformation under the hood to create AWS Cost Anomaly Detection monitors and subscriptions. 

  ## Repo Knowledge

  This repo has several base requirements
  * The following packages are installed via brew: `tflint`, `terrascan`, `terraform-docs`, `gitleaks`, `tfsec`, `pre-commit`, `tfsec`
  * Install `bash` through Brew for Bash 5.0, otherwise it will fail with the error that looks like `declare: -g: invalid option`
  * If you need more tflint plugins, please edit the `.tflint.hcl` file with the instructions from [here](https://github.com/terraform-linters/tflint)
  * It's highly recommend that you follow the Git Pre-Commit Instructions below, these will run in GitHub though they should be ran locally to reduce issues
  * By default Terraform docs will always run so our auto generated docs are always up to date
  * This repo has been tested with [awsume](https://stratusgrid.atlassian.net/wiki/spaces/TK/pages/1564966913/Awsume)
  
  ### TFSec
  
  See the pre-commit tfsec documentation [here](https://github.com/antonbabenko/pre-commit-terraform#terraform_tfsec), this includes on how to bypass warnings

  ## How to set this up in your Dev environment
  
  ### Before this is applied, you need to configure the git hook on your local machine
  
  ```bash
  #Verify you have bash5
  brew install bash
  
  # Test your pre-commit hooks - This will force them to run on all files
  pre-commit run --all-files
  
  # Add your pre-commit hooks forever
  pre-commit install
  ```

  ## Example

  ```hcl
  {{ include "examples/example1.tfnot" }}
  ```

  ---

  {{ .Requirements }}

  {{ .Resources }}

  {{ .Inputs }}

  {{ .Outputs }}

  ---

  Note, manual changes to the README will be overwritten when the documentation is updated. To update the documentation, run `terraform-docs -c .config/.terraform-docs.yml`

sections:
  show:
    - requirements
    - resources
    - inputs
    - outputs

sort:
  enabled: true
  by: name

output:
  file: README.md
  mode: replace
